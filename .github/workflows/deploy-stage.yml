name: Deploy to Stage

on:
  push:
    branches: [ stage-clean ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Install dependencies
      run: |
        echo "Installing root dependencies..."
        npm ci
        echo "Installing infrastructure dependencies..."
        cd infrastructure
        npm ci
        cd ..
    - name: Build backend
      run: |
        cd backend
        npm ci
        npm run build
        ls -la dist/  # Debug: verify dist directory exists
        cd ..
        ls -la backend/dist/  # Debug: verify from root
    - name: Bootstrap CDK (if needed)
      run: |
        cd infrastructure
        echo "Checking AWS credentials..."
        aws sts get-caller-identity
        echo "Running CDK bootstrap..."
        npx cdk bootstrap --context stage=stage || echo "Bootstrap might already exist, continuing..."
    - name: Deploy CDK stack
      run: |
        cd infrastructure
        # Debug: Check current directory and backend dist
        pwd
        ls -la ../backend/dist/ || echo "Backend dist not found!"
        npx cdk deploy --require-approval never --context stage=stage
        
    - name: Get API Gateway URL
      run: |
        cd infrastructure
        API_URL=$(npx cdk output --format json | jq -r '.["PREREQ"].ApiGatewayUrl // empty')
        echo "API_URL=$API_URL" >> $GITHUB_ENV
        echo "Deployed API Gateway URL: $API_URL" 